version: '3.8'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - xpack.security.http.ssl.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.0
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch

  search-service:
    build: search_service/
    container_name: search-service
    ports:
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_healthy

  project-service:
    build: order_service/
    container_name: project-service
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: myuser         # üîê –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      POSTGRES_PASSWORD: mypass     # üîê –ø–∞—Ä–æ–ª—å
      POSTGRES_DB: mydb             # üì¶ –∏–º—è –±–∞–∑—ã
    ports:
      - "5432:5432"                 # –≤–Ω–µ—à–Ω–∏–π:–≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U myuser -d mydb" ]
      interval: 10s        # –∫–∞–∫ —á–∞—Å—Ç–æ –ø—Ä–æ–≤–µ—Ä—è—Ç—å
      timeout: 5s          # —Ç–∞–π–º–∞—É—Ç –æ–¥–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
      retries: 5           # —Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –ø–æ–¥—Ä—è–¥ –º–æ–∂–µ—Ç –Ω–µ –ø—Ä–æ–π—Ç–∏
      start_period: 15s

volumes:
  esdata:
  postgres_data:
